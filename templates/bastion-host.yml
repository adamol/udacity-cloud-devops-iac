Parameters:
  Project:
    Description: Project name
    Type: String
    Default: Acme

  BastionHostAMI:
    Description: The machine image to be used for bastion host.
    Type: String
    Default: ami-05e1e66d082e56118

  BastionHostInstanceType:
    Description: The bastion host EC2 instance type to be used.
    Type: String
    Default: t3.micro

  BastionHostKeyName:
    Description: Name of an existing KeyPair to enable SSH access to the web servers from bastion host.
    Type: "AWS::EC2::KeyPair::KeyName"
    Default: udacity

Resources:
  BastionHostFullRole:
    Type: 'AWS::IAM::Role'
    Properties:
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AdministratorAccess"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: "/"

  ProfileWithRolesForBastion:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
        - !Ref BastionHostFullRole

  BastionHostSecGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Allow SSH access via port 22 to web servers"
      VpcId:
        Fn::ImportValue: !Sub "${Project}-VPCID"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

  BastionHost1:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: !Ref BastionHostAMI
      InstanceType: !Ref BastionHostInstanceType
      IamInstanceProfile: !Ref ProfileWithRolesForBastion
      SecurityGroupIds:
        - !Ref BastionHostSecGroup
      KeyName: !Ref BastionHostKeyName
      SubnetId:
        Fn::ImportValue: !Sub "${Project}-PUB1-SN"
    DependsOn:
      - BastionHostSecGroup
      - ProfileWithRolesForBastion

  BastionHost2:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: !Ref BastionHostAMI
      InstanceType: !Ref BastionHostInstanceType
      IamInstanceProfile: !Ref ProfileWithRolesForBastion
      SecurityGroupIds:
        - !Ref BastionHostSecGroup
      KeyName: !Ref BastionHostKeyName
      SubnetId:
        Fn::ImportValue: !Sub "${Project}-PUB2-SN"
    DependsOn:
      - BastionHostSecGroup
      - ProfileWithRolesForBastion

Outputs:

  BastionHost1Ip:
    Description: BastionHost1 Public IP
    Value: !GetAtt BastionHost1.PublicIp

  BastionHost2Ip:
    Description: BastionHost2 Public IP
    Value: !GetAtt BastionHost2.PublicIp

